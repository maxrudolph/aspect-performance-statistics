#!/bin/bash

# Script is compatible with linux and mac osx bash environment

output_file=runtimes_step_1.txt
min_dofs_per_core=0

if [ -f $output_file ]; then
  rm $output_file
fi

echo Resolution 2 3 4 5 > $output_file
echo Cores DoFs 2.7E+5 2.1E+6 1.6E+7 1.3E+8 >> $output_file

for cores in 1 2 4 8 16 32 64 128 256 512 1024; do
  echo -n $cores >> $output_file

  for resolution in `seq 2 5`; do
    accumulated_wallclock_time=0
    dofs=0
    n_runs=0

    for run in `seq 1 1`; do
      log_file=output_${cores}_${resolution}_${run}

      if [ -f $log_file ]; then
        dofs=`gawk '/Number of degrees of freedom:/ {print $6}' $log_file | sed "s/,//g"`
        dofs_per_core=`echo 'scale=6;' $dofs ' / ' $cores | bc -l`

        if (( $(bc <<< "$dofs_per_core > $min_dofs_per_core") )); then
          wallclock_time=`gawk -F '|' '/wallclock time/ {print $3}' $log_file | head -n 1`
          echo $wallclock_time > temp; wallclock_time=$(sed 's/.$//' temp)  
          initialization_time=`gawk -F '|' '/Initialization/ {print $4}' $log_file | head -n 1 `
          echo $initialization_time > temp; initialization_time=$(sed 's/.$//' temp)
          postprocessing_time=`gawk -F '|' '/Postprocessing/ {if ($4 != "") {print $4}}' $log_file | head -n 1 `
          echo $postprocessing_time > temp; postprocessing_time=$(sed 's/.$//' temp)
          setup_time=`gawk -F '|' '/Setup dof systems/ {print $4}' $log_file | head -n 1 `
          echo $setup_time > temp; setup_time=$(sed 's/.$//' temp)
          echo resolution: $resolution cores: $cores init: $initialization_time post: $postprocessing_time setup: $setup_time
          rm temp;

          if [ $wallclock_time ]; then
            n_runs=`expr $n_runs + 1`
            accumulated_wallclock_time=`echo $accumulated_wallclock_time ' + ' $wallclock_time '-' $initialization_time '-' $postprocessing_time '-' $setup_time | bc -l`
          fi

        fi

      fi
    done # for run
    if [ $n_runs != 0 ]; then
      echo resolution: $resolution cores: $cores number of runs: $n_runs
      echo -n ' ' `echo 'scale=6;' $accumulated_wallclock_time ' / ' $n_runs | bc -l` >> $output_file
    else
      echo -n ' 0' >> $output_file
    fi
  done # for resolution
  echo '' >> $output_file
done # for cores

gnuplot ../plot
